name: phpunit, The PHP Testing Framework

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        # php-version: ['8.1', '8,2', '8.3', 'latest']
        php-version: ['8.3']
        # mariadb:latest でインストールエラー
        db-version: ['mariadb:10']
    env:
      MYSQL_CMD:       mysql --protocol=tcp -h localhost -P 3306 -uusername -p'userpass'
      MYSQL_CMDT:      mysql --protocol=tcp -h localhost -P 3306 -uusername -p'userpass' rstapi
      MYSQL_CMD_ADMIN: mysql --protocol=tcp -h localhost -P 3306 -uroot -p'rootpass'
      MYSQL_USER: username
      MYSQL_PASS: userpass
      MYSQL_ROOT: rootpass
      MYSQL_DATABASE: rstapi
      phpunit_option:

#    services:
#      mariadb:
#        image: ${{ matrix.db-version }}
#        ports:
#          - 3306:3306
#        env:
#          MYSQL_USER: ${{ env.MYSQL_USER }}
#          MYSQL_PASSWORD: ${{ env.MYSQL_PASS }}
#          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT }}
#          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
#        volumes:
#          - ${{ github.workspace }}:/var/boo
#        options: >-
#          --health-cmd="mysqladmin ping"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #==================================================
      # env
      #==================================================
      - name: echo environment
        run: |
          pwd
          echo "@@ ls -l" && ls -l
          echo workspace=${{ github.workspace }}
          echo repository=${{ github.repository }}
          echo env=${{ github.env }}
          echo ref=${{ github.ref }}

#      #==================================================
#      # DB settings
#      #==================================================
#      - name: show database
#        run: |
#          ${{ env.MYSQL_CMD_ADMIN }} -e "SELECT VERSION()"
#          ${{ env.MYSQL_CMD }}       -e 'SHOW DATABASES' || exit 0
#      - name: DB grant
#        run: |
#          ${{ env.MYSQL_CMD_ADMIN }} -e "GRANT ALL ON *.* TO '${{ env.MYSQL_USER }}'@'%'"
#          ${{ env.MYSQL_CMD_ADMIN }} -e "CREATE USER 'username'@'localhost' IDENTIFIED BY 'userpass'"
#          ${{ env.MYSQL_CMD_ADMIN }} -e "GRANT ALL ON *.* TO 'username'@'localhost'"
#          ${{ env.MYSQL_CMD_ADMIN }} -e "SELECT user,host FROM mysql.user"
#      - name: DB migration
#        run: |
#          ${{ env.MYSQL_CMDT }} -e "SHOW TABLES"


      #######################################################
      # install phpunit
      #######################################################
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo_mysql, mbstring
          tools: cs2pr, phpunit
      - name: echo environment
        run: |
          php -version
          phpunit --version || echo phpunit version failed

      - name: go phpunit
        run: |
          DIR="."
          echo XDEBUG_MODE=coverage phpunit --coverage-text --configuration=./tests/phpunit.xml.dist --filter "`basename ${DIR}`" ${{ env.phpunit_option }} ${DIR}
          phpunit --no-coverage ${{ env.phpunit_option }} ${DIR}

